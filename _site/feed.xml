<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-05-03T11:24:38+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Qambium</title><subtitle>Transforme la bière en code... et en toutes sortes de choses fort sympatiques.</subtitle><author><name>Marc Muller</name></author><entry><title type="html">En cours de construction…</title><link href="http://localhost:4000/blog/home/site-en-cours-de-construction" rel="alternate" type="text/html" title="En cours de construction..." /><published>2019-05-02T12:03:00+02:00</published><updated>2019-05-02T12:03:00+02:00</updated><id>http://localhost:4000/blog/home/site-en-cours-de-construction</id><content type="html" xml:base="http://localhost:4000/blog/home/site-en-cours-de-construction">&lt;p&gt;Ce site web est en cours de construction ! Ce n’est pas évident de réaliser son site de A à Z.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Marcus</name></author><summary type="html">Ce site web est en cours de construction ! Ce n’est pas évident de réaliser son site de A à Z.</summary></entry><entry><title type="html">Woodstock.js</title><link href="http://localhost:4000/blog/apps/woodstock.js-presentation" rel="alternate" type="text/html" title="Woodstock.js" /><published>2018-12-01T19:34:11+01:00</published><updated>2018-12-01T19:34:11+01:00</updated><id>http://localhost:4000/blog/apps/woodstock.js-presentation</id><content type="html" xml:base="http://localhost:4000/blog/apps/woodstock.js-presentation">&lt;p&gt;Woodstock.js est une application open source gratuite en ligne permettant le cubage des arbres sur pied. C’est une &lt;a href=&quot;https://fr.wikipedia.org/wiki/Application_web_monopage&quot;&gt;“Single Page Application”&lt;/a&gt; (ou application monopage en français). Ecrite en Javascript avec le Framework AngularJS.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;fonctionnement&quot;&gt;Fonctionnement&lt;/h2&gt;

&lt;p&gt;Cette application utilise la librairie &lt;a href=&quot;https://qambium.fr/blog/apps/quercus.js-presentation&quot;&gt;Quercus.js&lt;/a&gt; pour le cubage des arbres sur pied.&lt;/p&gt;

&lt;p&gt;La saisie des arbres se fait par classe de diamètre.&lt;/p&gt;</content><author><name>Marcus</name></author><summary type="html">Woodstock.js est une application open source gratuite en ligne permettant le cubage des arbres sur pied. C’est une “Single Page Application” (ou application monopage en français). Ecrite en Javascript avec le Framework AngularJS.</summary></entry><entry><title type="html">Mes Applications</title><link href="http://localhost:4000/blog/apps/mes-applications" rel="alternate" type="text/html" title="Mes Applications" /><published>2018-12-01T17:34:11+01:00</published><updated>2018-12-01T17:34:11+01:00</updated><id>http://localhost:4000/blog/apps/mes-applications</id><content type="html" xml:base="http://localhost:4000/blog/apps/mes-applications">&lt;p&gt;J’adore bidouiller, concevoir et fabriquer des choses. Pour moi la programmation est donc un régal ! Autant que ce soit utile, mes applications sont toutes open source. C’est en particulier la programmation d’application web qui me fascine. Plus particulièrement les &lt;a href=&quot;https://fr.wikipedia.org/wiki/Application_web_monopage&quot;&gt;“Single Page Applications”&lt;/a&gt; (ou application monopage en français).
&lt;!--more--&gt;
Laissez moi vous expliquer mes choix d’architecture pour le développement des mes applications.&lt;/p&gt;

&lt;h3 id=&quot;angularjs&quot;&gt;AngularJS&lt;/h3&gt;

&lt;p&gt;Ce sont des applications web écrites en javascript qui ne nécessitent le chargement que d’une seule page contenant toutes les ressources nécessaire au fonctionnement de l’application (js et css). La navigation se fait alors sans changer d’emplacement sur le serveur. Et toutes les ressources chargées après le chargement initial de la page se fait en arrière plan grâce à des requêtes
&lt;a href=&quot;https://fr.wikipedia.org/wiki/Ajax_%28informatique%29&quot;&gt;AJAX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://tecorb.com/wp-content/uploads/2017/01/angularjs-rails-asynchrous-diagram1.png&quot; alt=&quot;&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;J’ai découvert le framework  &lt;a href=&quot;https://fr.wikipedia.org/wiki/AngularJS&quot;&gt;AngularJS&lt;/a&gt; développé par Google qui est très puissant et facile à prendre en main pour développer des applications monopages (quand on a déjà programmer avant…).&lt;/p&gt;

&lt;p&gt;Il utilise l’architecture &lt;a href=&quot;https://fr.wikipedia.org/wiki/Modèle-vue-contrôleur&quot;&gt;MVC&lt;/a&gt; ou Modèle-Vue-Contrôleur.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un Contrôleur est une classe qui se charge des interactions avec l’utilisateur.&lt;/li&gt;
  &lt;li&gt;Un Modèle est une classe qui gère les données à afficher.&lt;/li&gt;
  &lt;li&gt;Et un une Vue qui contient la présentation de l’interface graphique.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;(Oui bon ce n’est pas dans l’ordre des initiales mais c’est l’ordre le plus logique ! Car le contrôleur gère l’interaction d’un utilisateur, demande des données au modèle et met en forme la vue pour rendre à l’utilisateur ce qu’il demande… Renommons ça le CMV ! Hmm c’est moins classe…)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;hébergement&quot;&gt;Hébergement&lt;/h3&gt;

&lt;p&gt;Pour ce qui est de l’hébergement, j’ai opté pour &lt;a href=&quot;https://pages.github.com&quot;&gt;Github Pages&lt;/a&gt; qui permet d’héberger des sites statiques. Ceci ne pose pas de problèmes en soit pour des applications monopages. Mais vous pouvez oublier php, nodeJS, base de données, et tout ce qui permet de générer du contenu de manière dynamique sur le serveur. Bref, oubliez le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Backend&quot;&gt;Back-End&lt;/a&gt;, tout se passe sur le &lt;a href=&quot;https://fr.wikipedia.org/wiki/Frontal_serveur&quot;&gt;Front-End&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Afin de permettre à l’utilisateur de conserver ses données sans avoir à les stocker sur le serveur, donc à recouvrir à système de connexion/compte en ligne. J’ai du opté pour un bon vieux système de sauvegarde dans des fichiers.&lt;/p&gt;

&lt;p&gt;Le client peut enregistrer son projet à tous moment et peut l’ouvrir sur le serveur quand il le décide.
C’est donc le client qui est responsable de la sauvegarde de ses données et on peut se passer de bases données et de gros scripts en Back-End pour enregistrer les données du client sur le serveur. Pas de cookies, de perte de mot de passe, de newlesters… Bref on s’abstient de toutes les joies de l’administration d’un serveur…&lt;/p&gt;

&lt;p&gt;N’importe qui peut utiliser l’application sans avoir à créer de compte, peut partager un de ses projets tout simplement en envoyant par mail son fichier de données.&lt;/p&gt;

&lt;p&gt;En tout cas retenons l’essentiel de l’hébergement sur Github Pages : &lt;strong&gt;c’est gratuit !&lt;/strong&gt; (enfin pour l’instant, rappellont que Microsoft vient de racheter Github…).&lt;/p&gt;</content><author><name>Marcus</name></author><summary type="html">J’adore bidouiller, concevoir et fabriquer des choses. Pour moi la programmation est donc un régal ! Autant que ce soit utile, mes applications sont toutes open source. C’est en particulier la programmation d’application web qui me fascine. Plus particulièrement les “Single Page Applications” (ou application monopage en français).</summary></entry><entry><title type="html">Fabrication du Poulailler</title><link href="http://localhost:4000/blog/bricolage/fabrictation-du-poullailler" rel="alternate" type="text/html" title="Fabrication du Poulailler" /><published>2018-11-23T11:03:00+01:00</published><updated>2018-11-23T11:03:00+01:00</updated><id>http://localhost:4000/blog/bricolage/fabrictation-du-poullailler</id><content type="html" xml:base="http://localhost:4000/blog/bricolage/fabrictation-du-poullailler">&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;titre-de-niveau-2-&quot;&gt;Titre de niveau 2 !&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;</content><author><name>Marcus</name></author><summary type="html">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/blog/jekyll/update/welcome-to-jekyll" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2015-07-04T12:03:11+02:00</published><updated>2015-07-04T12:03:11+02:00</updated><id>http://localhost:4000/blog/jekyll/update/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/blog/jekyll/update/welcome-to-jekyll">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Marcus</name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>